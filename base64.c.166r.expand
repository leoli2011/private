
;; Function base64_decode (base64_decode, funcdef_no=2, decl_uid=3845, cgraph_uid=2)

Partition 2: size 8 align 8
	dst_3
Partition 3: size 4 align 4
	index_22
Partition 1: size 4 align 4
	v_2
Partition 0: size 4 align 4
	i_1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13
deleting block 15


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 15 into block 14...
Merged blocks 14 and 15.
Merged 14 and 15 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 out+0 S8 A64])
        (reg:DI 5 di [ out ])) base64.c:47 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 in+0 S8 A64])
        (reg:DI 4 si [ in ])) base64.c:47 -1
     (nil))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -52 [0xffffffffffffffcc])) [0 out_size+0 S4 A32])
        (reg:SI 1 dx [ out_size ])) base64.c:47 -1
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 out+0 S8 A64])) base64.c:49 -1
     (nil))
(insn 9 8 10 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 dst+0 S8 A64])
        (reg/f:DI 90)) base64.c:49 -1
     (nil))
(insn 10 9 11 2 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 v+0 S4 A32])
        (const_int 0 [0])) base64.c:51 -1
     (nil))
(insn 11 10 12 2 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
        (const_int 0 [0])) base64.c:52 -1
     (nil))
(jump_insn 12 11 13 2 (set (pc)
        (label_ref 71)) base64.c:52 -1
     (nil)
 -> 71)
(barrier 13 12 86)
(code_label 86 13 14 4 8 "" [1 uses])
(note 14 86 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 4 (set (reg:SI 91)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) base64.c:53 -1
     (nil))
(insn 16 15 17 4 (set (reg:DI 66 [ D.3953 ])
        (sign_extend:DI (reg:SI 91))) base64.c:53 -1
     (nil))
(insn 17 16 18 4 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 in+0 S8 A64])) base64.c:53 -1
     (nil))
(insn 18 17 19 4 (parallel [
            (set (reg/f:DI 67 [ D.3954 ])
                (plus:DI (reg:DI 66 [ D.3953 ])
                    (reg/f:DI 92)))
            (clobber (reg:CC 17 flags))
        ]) base64.c:53 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])) [0 in+0 S8 A64])
            (reg:DI 66 [ D.3953 ]))
        (nil)))
(insn 19 18 20 4 (set (reg:QI 68 [ D.3955 ])
        (mem:QI (reg/f:DI 67 [ D.3954 ]) [0 *_18+0 S1 A8])) base64.c:53 -1
     (nil))
(insn 20 19 21 4 (set (reg:SI 69 [ D.3952 ])
        (sign_extend:SI (reg:QI 68 [ D.3955 ]))) base64.c:53 -1
     (nil))
(insn 21 20 22 4 (parallel [
            (set (reg:SI 70 [ D.3952 ])
                (plus:SI (reg:SI 69 [ D.3952 ])
                    (const_int -43 [0xffffffffffffffd5])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:53 -1
     (nil))
(insn 22 21 23 4 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 index+0 S4 A32])
        (reg:SI 70 [ D.3952 ])) base64.c:53 -1
     (nil))
(insn 23 22 24 4 (set (reg:CC 17 flags)
        (compare:CC (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 index+0 S4 A32])
            (const_int 79 [0x4f]))) base64.c:54 -1
     (nil))
(jump_insn 24 23 25 4 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 30)
            (pc))) base64.c:54 -1
     (nil)
 -> 30)
(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 5 (set (reg:DI 93)
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 index+0 S4 A32]))) base64.c:54 -1
     (nil))
(insn 27 26 28 5 (set (reg:QI 71 [ D.3956 ])
        (mem/u/j:QI (plus:DI (reg:DI 93)
                (symbol_ref:DI ("map2") [flags 0x2]  <var_decl 0x2b3c9c0bf2f8 map2>)) [0 map2 S1 A8])) base64.c:54 -1
     (nil))
(insn 28 27 29 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 71 [ D.3956 ])
            (const_int -1 [0xffffffffffffffff]))) base64.c:54 -1
     (nil))
(jump_insn 29 28 30 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 35)
            (pc))) base64.c:54 -1
     (nil)
 -> 35)
(code_label 30 29 31 6 3 "" [1 uses])
(note 31 30 32 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 6 (set (reg:SI 59 [ D.3952 ])
        (const_int -1 [0xffffffffffffffff])) base64.c:55 -1
     (nil))
(jump_insn 33 32 34 6 (set (pc)
        (label_ref 95)) base64.c:55 -1
     (nil)
 -> 95)
(barrier 34 33 35)
(code_label 35 34 36 7 4 "" [1 uses])
(note 36 35 37 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 7 (set (reg:SI 94)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 v+0 S4 A32])) base64.c:56 -1
     (nil))
(insn 38 37 39 7 (parallel [
            (set (reg:SI 72 [ D.3952 ])
                (ashift:SI (reg:SI 94)
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:56 -1
     (expr_list:REG_EQUAL (ashift:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 v+0 S4 A32])
            (const_int 6 [0x6]))
        (nil)))
(insn 39 38 40 7 (set (reg:DI 95)
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 index+0 S4 A32]))) base64.c:56 -1
     (nil))
(insn 40 39 41 7 (set (reg:QI 73 [ D.3956 ])
        (mem/u/j:QI (plus:DI (reg:DI 95)
                (symbol_ref:DI ("map2") [flags 0x2]  <var_decl 0x2b3c9c0bf2f8 map2>)) [0 map2 S1 A8])) base64.c:56 -1
     (nil))
(insn 41 40 42 7 (set (reg:SI 74 [ D.3952 ])
        (zero_extend:SI (reg:QI 73 [ D.3956 ]))) base64.c:56 -1
     (nil))
(insn 42 41 43 7 (parallel [
            (set (reg:SI 96)
                (plus:SI (reg:SI 72 [ D.3952 ])
                    (reg:SI 74 [ D.3952 ])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:56 -1
     (nil))
(insn 43 42 44 7 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 v+0 S4 A32])
        (reg:SI 96)) base64.c:56 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 72 [ D.3952 ])
            (reg:SI 74 [ D.3952 ]))
        (nil)))
(insn 44 43 45 7 (set (reg:SI 97)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) base64.c:57 -1
     (nil))
(insn 45 44 46 7 (parallel [
            (set (reg:SI 75 [ D.3952 ])
                (and:SI (reg:SI 97)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:57 -1
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
            (const_int 3 [0x3]))
        (nil)))
(insn 46 45 47 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 75 [ D.3952 ])
            (const_int 0 [0]))) base64.c:57 -1
     (nil))
(jump_insn 47 46 48 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 68)
            (pc))) base64.c:57 -1
     (nil)
 -> 68)
(note 48 47 49 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 8 (set (reg:DI 76 [ dst.0 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 dst+0 S8 A64])) base64.c:58 -1
     (nil))
(insn 50 49 51 8 (set (reg:DI 77 [ out.1 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 out+0 S8 A64])) base64.c:58 -1
     (nil))
(insn 51 50 52 8 (parallel [
            (set (reg:DI 78 [ D.3957 ])
                (minus:DI (reg:DI 76 [ dst.0 ])
                    (reg:DI 77 [ out.1 ])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:58 -1
     (nil))
(insn 52 51 53 8 (set (reg:SI 98)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -52 [0xffffffffffffffcc])) [0 out_size+0 S4 A32])) base64.c:58 -1
     (nil))
(insn 53 52 54 8 (set (reg:DI 79 [ D.3957 ])
        (sign_extend:DI (reg:SI 98))) base64.c:58 -1
     (nil))
(insn 54 53 55 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 78 [ D.3957 ])
            (reg:DI 79 [ D.3957 ]))) base64.c:58 -1
     (nil))
(jump_insn 55 54 56 8 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 68)
            (pc))) base64.c:58 -1
     (nil)
 -> 68)
(note 56 55 57 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 9 (set (reg/f:DI 80 [ dst.2 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 dst+0 S8 A64])) base64.c:59 -1
     (nil))
(insn 58 57 59 9 (parallel [
            (set (reg:DI 99)
                (plus:DI (reg/f:DI 80 [ dst.2 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:59 -1
     (nil))
(insn 59 58 60 9 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 dst+0 S8 A64])
        (reg:DI 99)) base64.c:59 -1
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 80 [ dst.2 ])
            (const_int 1 [0x1]))
        (nil)))
(insn 60 59 61 9 (set (reg:SI 100)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) base64.c:59 -1
     (nil))
(insn 61 60 62 9 (set (reg:SI 81 [ D.3952 ])
        (not:SI (reg:SI 100))) base64.c:59 -1
     (expr_list:REG_EQUAL (not:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32]))
        (nil)))
(insn 62 61 63 9 (parallel [
            (set (reg:SI 82 [ D.3952 ])
                (and:SI (reg:SI 81 [ D.3952 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:59 -1
     (nil))
(insn 63 62 64 9 (parallel [
            (set (reg:SI 83 [ D.3952 ])
                (ashift:SI (reg:SI 82 [ D.3952 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:59 -1
     (nil))
(insn 64 63 65 9 (set (reg:SI 101)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 v+0 S4 A32])) base64.c:59 -1
     (nil))
(insn 65 64 66 9 (parallel [
            (set (reg:SI 84 [ D.3952 ])
                (ashiftrt:SI (reg:SI 101)
                    (subreg:QI (reg:SI 83 [ D.3952 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) base64.c:59 -1
     (expr_list:REG_EQUAL (ashiftrt:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [0 v+0 S4 A32])
            (subreg:QI (reg:SI 83 [ D.3952 ]) 0))
        (nil)))
(insn 66 65 67 9 (set (reg:QI 85 [ D.3956 ])
        (subreg:QI (reg:SI 84 [ D.3952 ]) 0)) base64.c:59 -1
     (nil))
(insn 67 66 68 9 (set (mem:QI (reg/f:DI 80 [ dst.2 ]) [0 *dst.2_34+0 S1 A8])
        (reg:QI 85 [ D.3956 ])) base64.c:59 -1
     (nil))
(code_label 68 67 69 10 6 "" [2 uses])
(note 69 68 70 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 71 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:52 -1
     (nil))
(code_label 71 70 72 11 2 "" [1 uses])
(note 72 71 73 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 74 11 (set (reg:SI 102)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) base64.c:52 -1
     (nil))
(insn 74 73 75 11 (set (reg:DI 60 [ D.3953 ])
        (sign_extend:DI (reg:SI 102))) base64.c:52 -1
     (nil))
(insn 75 74 76 11 (set (reg/f:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 in+0 S8 A64])) base64.c:52 -1
     (nil))
(insn 76 75 77 11 (parallel [
            (set (reg/f:DI 61 [ D.3954 ])
                (plus:DI (reg:DI 60 [ D.3953 ])
                    (reg/f:DI 103)))
            (clobber (reg:CC 17 flags))
        ]) base64.c:52 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])) [0 in+0 S8 A64])
            (reg:DI 60 [ D.3953 ]))
        (nil)))
(insn 77 76 78 11 (set (reg:QI 62 [ D.3955 ])
        (mem:QI (reg/f:DI 61 [ D.3954 ]) [0 *_12+0 S1 A8])) base64.c:52 -1
     (nil))
(insn 78 77 79 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 62 [ D.3955 ])
            (const_int 0 [0]))) base64.c:52 -1
     (nil))
(jump_insn 79 78 80 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 89)
            (pc))) base64.c:52 -1
     (nil)
 -> 89)
(note 80 79 81 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 12 (set (reg:SI 104)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) base64.c:52 -1
     (nil))
(insn 82 81 83 12 (set (reg:DI 63 [ D.3953 ])
        (sign_extend:DI (reg:SI 104))) base64.c:52 -1
     (nil))
(insn 83 82 84 12 (set (reg/f:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 in+0 S8 A64])) base64.c:52 -1
     (nil))
(insn 84 83 85 12 (parallel [
            (set (reg/f:DI 64 [ D.3954 ])
                (plus:DI (reg:DI 63 [ D.3953 ])
                    (reg/f:DI 105)))
            (clobber (reg:CC 17 flags))
        ]) base64.c:52 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])) [0 in+0 S8 A64])
            (reg:DI 63 [ D.3953 ]))
        (nil)))
(insn 85 84 87 12 (set (reg:QI 65 [ D.3955 ])
        (mem:QI (reg/f:DI 64 [ D.3954 ]) [0 *_15+0 S1 A8])) base64.c:52 -1
     (nil))
(insn 87 85 88 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 65 [ D.3955 ])
            (const_int 61 [0x3d]))) base64.c:52 -1
     (nil))
(jump_insn 88 87 89 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 86)
            (pc))) base64.c:52 -1
     (nil)
 -> 86)
(code_label 89 88 90 13 7 "" [1 uses])
(note 90 89 91 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 91 90 92 13 (set (reg:DI 86 [ dst.3 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 dst+0 S8 A64])) base64.c:64 -1
     (nil))
(insn 92 91 93 13 (set (reg:DI 87 [ out.4 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 out+0 S8 A64])) base64.c:64 -1
     (nil))
(insn 93 92 94 13 (parallel [
            (set (reg:DI 88 [ D.3957 ])
                (minus:DI (reg:DI 86 [ dst.3 ])
                    (reg:DI 87 [ out.4 ])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:64 -1
     (nil))
(insn 94 93 95 13 (set (reg:SI 59 [ D.3952 ])
        (subreg:SI (reg:DI 88 [ D.3957 ]) 0)) base64.c:64 -1
     (nil))
(code_label 95 94 96 14 5 "" [1 uses])
(note 96 95 97 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 101 14 (set (reg:SI 89 [ <retval> ])
        (reg:SI 59 [ D.3952 ])) -1
     (nil))
(insn 101 97 104 14 (set (reg/i:SI 0 ax)
        (reg:SI 89 [ <retval> ])) base64.c:65 -1
     (nil))
(insn 104 101 0 14 (use (reg/i:SI 0 ax)) base64.c:65 -1
     (nil))

;; Function base64_encode (base64_encode, funcdef_no=3, decl_uid=3850, cgraph_uid=3)

Partition 4: size 8 align 8
	ret_22
Partition 0: size 8 align 8
	dst_2
Partition 3: size 4 align 4
	bytes_remaining_8
Partition 2: size 4 align 4
	i_shift_6
Partition 1: size 4 align 4
	i_bits_5

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15
deleting block 17


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 17 into block 16...
Merged blocks 16 and 17.
Merged 16 and 17 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 out+0 S8 A64])
        (reg:DI 5 di [ out ])) base64.c:74 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [0 out_size+0 S4 A32])
        (reg:SI 4 si [ out_size ])) base64.c:74 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 in+0 S8 A64])
        (reg:DI 1 dx [ in ])) base64.c:74 -1
     (nil))
(insn 5 4 6 2 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 in_size+0 S4 A32])
        (reg:SI 2 cx [ in_size ])) base64.c:74 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 i_bits+0 S4 A32])
        (const_int 0 [0])) base64.c:78 -1
     (nil))
(insn 10 9 11 2 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 i_shift+0 S4 A32])
        (const_int 0 [0])) base64.c:79 -1
     (nil))
(insn 11 10 12 2 (set (reg:SI 80)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 in_size+0 S4 A32])) base64.c:80 -1
     (nil))
(insn 12 11 13 2 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 bytes_remaining+0 S4 A32])
        (reg:SI 80)) base64.c:80 -1
     (nil))
(insn 13 12 14 2 (set (reg:SI 60 [ in_size.5 ])
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 in_size+0 S4 A32])) base64.c:82 -1
     (nil))
(insn 14 13 15 2 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 60 [ in_size.5 ])
            (const_int 1073741822 [0x3ffffffe]))) base64.c:82 -1
     (nil))
(jump_insn 15 14 16 2 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 27)
            (pc))) base64.c:82 -1
     (nil)
 -> 27)
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 4 (set (reg:SI 81)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 in_size+0 S4 A32])) base64.c:83 -1
     (nil))
(insn 18 17 19 4 (parallel [
            (set (reg:SI 61 [ D.3959 ])
                (plus:SI (reg:SI 81)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:83 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])) [0 in_size+0 S4 A32])
            (const_int 2 [0x2]))
        (nil)))
(insn 19 18 20 4 (set (reg:SI 83)
        (const_int 1431655766 [0x55555556])) base64.c:83 -1
     (nil))
(insn 20 19 21 4 (parallel [
            (set (reg:SI 82)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 61 [ D.3959 ]))
                            (sign_extend:DI (reg:SI 83)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
            (clobber (reg:CC 17 flags))
        ]) base64.c:83 -1
     (nil))
(insn 21 20 22 4 (parallel [
            (set (reg:SI 84)
                (ashiftrt:SI (reg:SI 61 [ D.3959 ])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:83 -1
     (nil))
(insn 22 21 23 4 (parallel [
            (set (reg:SI 62 [ D.3959 ])
                (minus:SI (reg:SI 82)
                    (reg:SI 84)))
            (clobber (reg:CC 17 flags))
        ]) base64.c:83 -1
     (expr_list:REG_EQUAL (div:SI (reg:SI 61 [ D.3959 ])
            (const_int 3 [0x3]))
        (nil)))
(insn 23 22 24 4 (parallel [
            (set (reg:SI 63 [ D.3959 ])
                (ashift:SI (reg:SI 62 [ D.3959 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:83 -1
     (nil))
(insn 24 23 25 4 (parallel [
            (set (reg:SI 64 [ D.3959 ])
                (plus:SI (reg:SI 63 [ D.3959 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:83 -1
     (nil))
(insn 25 24 26 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 64 [ D.3959 ])
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -44 [0xffffffffffffffd4])) [0 out_size+0 S4 A32]))) base64.c:82 -1
     (nil))
(jump_insn 26 25 27 4 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 32)
            (pc))) base64.c:82 -1
     (nil)
 -> 32)
(code_label 27 26 28 5 10 "" [1 uses])
(note 28 27 29 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 5 (set (reg/f:DI 59 [ D.3958 ])
        (const_int 0 [0])) base64.c:84 -1
     (nil))
(jump_insn 30 29 31 5 (set (pc)
        (label_ref 100)) base64.c:84 -1
     (nil)
 -> 100)
(barrier 31 30 32)
(code_label 32 31 33 6 11 "" [1 uses])
(note 33 32 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 6 (set (reg/f:DI 85)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [0 out+0 S8 A64])) base64.c:85 -1
     (nil))
(insn 35 34 36 6 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 dst+0 S8 A64])
        (reg/f:DI 85)) base64.c:85 -1
     (nil))
(insn 36 35 37 6 (set (reg/f:DI 86)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 dst+0 S8 A64])) base64.c:85 -1
     (nil))
(insn 37 36 38 6 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 ret+0 S8 A64])
        (reg/f:DI 86)) base64.c:85 -1
     (nil))
(jump_insn 38 37 39 6 (set (pc)
        (label_ref 74)) base64.c:86 -1
     (nil)
 -> 74)
(barrier 39 38 76)
(code_label 76 39 40 7 15 "" [1 uses])
(note 40 76 41 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 7 (set (reg:SI 87)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 i_bits+0 S4 A32])) base64.c:87 -1
     (nil))
(insn 42 41 43 7 (parallel [
            (set (reg:SI 65 [ D.3960 ])
                (ashift:SI (reg:SI 87)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:87 -1
     (expr_list:REG_EQUAL (ashift:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [0 i_bits+0 S4 A32])
            (const_int 8 [0x8]))
        (nil)))
(insn 43 42 44 7 (set (reg/f:DI 66 [ in.6 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 in+0 S8 A64])) base64.c:87 -1
     (nil))
(insn 44 43 45 7 (parallel [
            (set (reg:DI 88)
                (plus:DI (reg/f:DI 66 [ in.6 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:87 -1
     (nil))
(insn 45 44 46 7 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [0 in+0 S8 A64])
        (reg:DI 88)) base64.c:87 -1
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 66 [ in.6 ])
            (const_int 1 [0x1]))
        (nil)))
(insn 46 45 47 7 (set (reg:QI 67 [ D.3961 ])
        (mem:QI (reg/f:DI 66 [ in.6 ]) [0 *in.6_25+0 S1 A8])) base64.c:87 -1
     (nil))
(insn 47 46 48 7 (set (reg:SI 68 [ D.3960 ])
        (zero_extend:SI (reg:QI 67 [ D.3961 ]))) base64.c:87 -1
     (nil))
(insn 48 47 49 7 (parallel [
            (set (reg:SI 89)
                (plus:SI (reg:SI 65 [ D.3960 ])
                    (reg:SI 68 [ D.3960 ])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:87 -1
     (nil))
(insn 49 48 50 7 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 i_bits+0 S4 A32])
        (reg:SI 89)) base64.c:87 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 65 [ D.3960 ])
            (reg:SI 68 [ D.3960 ]))
        (nil)))
(insn 50 49 51 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [0 bytes_remaining+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [0 bytes_remaining+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:88 -1
     (nil))
(insn 51 50 65 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -24 [0xffffffffffffffe8])) [0 i_shift+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -24 [0xffffffffffffffe8])) [0 i_shift+0 S4 A32])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:89 -1
     (nil))
(code_label 65 51 52 8 14 "" [2 uses])
(note 52 65 53 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 8 (set (reg/f:DI 69 [ dst.7 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 dst+0 S8 A64])) base64.c:92 -1
     (nil))
(insn 54 53 55 8 (parallel [
            (set (reg:DI 90)
                (plus:DI (reg/f:DI 69 [ dst.7 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:92 -1
     (nil))
(insn 55 54 56 8 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 dst+0 S8 A64])
        (reg:DI 90)) base64.c:92 -1
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 69 [ dst.7 ])
            (const_int 1 [0x1]))
        (nil)))
(insn 56 55 57 8 (set (reg:SI 91)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 i_bits+0 S4 A32])) base64.c:92 -1
     (nil))
(insn 57 56 58 8 (parallel [
            (set (reg:SI 70 [ D.3960 ])
                (ashift:SI (reg:SI 91)
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:92 -1
     (expr_list:REG_EQUAL (ashift:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [0 i_bits+0 S4 A32])
            (const_int 6 [0x6]))
        (nil)))
(insn 58 57 59 8 (set (reg:SI 92)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 i_shift+0 S4 A32])) base64.c:92 -1
     (nil))
(insn 59 58 60 8 (parallel [
            (set (reg:SI 71 [ D.3960 ])
                (lshiftrt:SI (reg:SI 70 [ D.3960 ])
                    (subreg:QI (reg:SI 92) 0)))
            (clobber (reg:CC 17 flags))
        ]) base64.c:92 -1
     (nil))
(insn 60 59 61 8 (parallel [
            (set (reg:SI 72 [ D.3960 ])
                (and:SI (reg:SI 71 [ D.3960 ])
                    (const_int 63 [0x3f])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:92 -1
     (nil))
(insn 61 60 62 8 (set (reg:DI 93)
        (zero_extend:DI (reg:SI 72 [ D.3960 ]))) base64.c:92 -1
     (nil))
(insn 62 61 63 8 (set (reg:QI 73 [ D.3962 ])
        (mem/u/j:QI (plus:DI (reg:DI 93)
                (symbol_ref:DI ("b64.3870") [flags 0x2]  <var_decl 0x2b3c9c0bf688 b64>)) [0 b64 S1 A8])) base64.c:92 -1
     (nil))
(insn 63 62 64 8 (set (mem:QI (reg/f:DI 69 [ dst.7 ]) [0 *dst.7_32+0 S1 A8])
        (reg:QI 73 [ D.3962 ])) base64.c:92 -1
     (nil))
(insn 64 63 66 8 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -24 [0xffffffffffffffe8])) [0 i_shift+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -24 [0xffffffffffffffe8])) [0 i_shift+0 S4 A32])
                    (const_int -6 [0xfffffffffffffffa])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:93 -1
     (nil))
(insn 66 64 67 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 i_shift+0 S4 A32])
            (const_int 6 [0x6]))) base64.c:94 -1
     (nil))
(jump_insn 67 66 68 8 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 65)
            (pc))) base64.c:94 -1
     (nil)
 -> 65)
(note 68 67 69 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 bytes_remaining+0 S4 A32])
            (const_int 0 [0]))) base64.c:94 -1
     (nil))
(jump_insn 70 69 71 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 74)
            (pc))) base64.c:94 -1
     (nil)
 -> 74)
(note 71 70 72 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 10 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 i_shift+0 S4 A32])
            (const_int 0 [0]))) base64.c:94 -1
     (nil))
(jump_insn 73 72 74 10 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 65)
            (pc))) base64.c:94 -1
     (nil)
 -> 65)
(code_label 74 73 75 11 13 "" [2 uses])
(note 75 74 77 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 77 75 78 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 bytes_remaining+0 S4 A32])
            (const_int 0 [0]))) base64.c:86 -1
     (nil))
(jump_insn 78 77 79 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 76)
            (pc))) base64.c:86 -1
     (nil)
 -> 76)
(note 79 78 80 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(jump_insn 80 79 81 12 (set (pc)
        (label_ref 87)) base64.c:96 -1
     (nil)
 -> 87)
(barrier 81 80 93)
(code_label 93 81 82 13 17 "" [1 uses])
(note 82 93 83 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 84 13 (set (reg/f:DI 78 [ dst.8 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 dst+0 S8 A64])) base64.c:97 -1
     (nil))
(insn 84 83 85 13 (parallel [
            (set (reg:DI 94)
                (plus:DI (reg/f:DI 78 [ dst.8 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:97 -1
     (nil))
(insn 85 84 86 13 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 dst+0 S8 A64])
        (reg:DI 94)) base64.c:97 -1
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 78 [ dst.8 ])
            (const_int 1 [0x1]))
        (nil)))
(insn 86 85 87 13 (set (mem:QI (reg/f:DI 78 [ dst.8 ]) [0 *dst.8_43+0 S1 A8])
        (const_int 61 [0x3d])) base64.c:97 -1
     (nil))
(code_label 87 86 88 14 16 "" [1 uses])
(note 88 87 89 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 14 (set (reg:DI 74 [ dst.9 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 dst+0 S8 A64])) base64.c:96 -1
     (nil))
(insn 90 89 91 14 (set (reg:DI 75 [ ret.10 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 ret+0 S8 A64])) base64.c:96 -1
     (nil))
(insn 91 90 92 14 (parallel [
            (set (reg:DI 76 [ D.3963 ])
                (minus:DI (reg:DI 74 [ dst.9 ])
                    (reg:DI 75 [ ret.10 ])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:96 -1
     (nil))
(insn 92 91 94 14 (parallel [
            (set (reg:DI 77 [ D.3963 ])
                (and:DI (reg:DI 76 [ D.3963 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:96 -1
     (nil))
(insn 94 92 95 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 77 [ D.3963 ])
            (const_int 0 [0]))) base64.c:96 -1
     (nil))
(jump_insn 95 94 96 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 93)
            (pc))) base64.c:96 -1
     (nil)
 -> 93)
(note 96 95 97 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 98 15 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 dst+0 S8 A64])) base64.c:98 -1
     (nil))
(insn 98 97 99 15 (set (mem:QI (reg/f:DI 95) [0 *dst_4+0 S1 A8])
        (const_int 0 [0])) base64.c:98 -1
     (nil))
(insn 99 98 100 15 (set (reg/f:DI 59 [ D.3958 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 ret+0 S8 A64])) base64.c:100 -1
     (nil))
(code_label 100 99 101 16 12 "" [1 uses])
(note 101 100 102 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 102 101 106 16 (set (reg:DI 79 [ <retval> ])
        (reg/f:DI 59 [ D.3958 ])) -1
     (nil))
(insn 106 102 109 16 (set (reg/i:DI 0 ax)
        (reg:DI 79 [ <retval> ])) base64.c:101 -1
     (nil))
(insn 109 106 0 16 (use (reg/i:DI 0 ax)) base64.c:101 -1
     (nil))
